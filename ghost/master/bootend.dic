OnFirstBoot //This runs the very first time Demo is started up.
{
 	lastTalk = "" //This is part of how chained conversations work (see aitalk.dic).
	passmin = 0 
	passsec = 0 // These two keep track of the time.
 	username         = "Scrumpy" //This sets a temporary name for the user. It'll be replaced when they tell the ghost their name.
	stroke           = 0	// Sets their being-pet state to zero.
 	teachusername    = 0	// Related to them learning your name.
	mikireflag       = 0	// Determines behavior at certain points.
 	aitalkinterval = 400 //Their default talk rate.
 	birthdayprint = "????" //A temporary value for the user's birthday.
	talktime = "5 minutes" //How the value aitalkinterval will display in the config menu.
	deleteshitai = "OFF" //Sets whether or not the user can uninstall the ghost to "OFF". The user can change it later in the config menu (see menu.dic). 
	nowshell = "master" //This is for a special if check in aitalk.dic to see what shell the ghost is using. You should use the name of your default shell folder here.
	drunk = 0 //Demoman does not need to drink when meeting someone new (unlike me)
	
	if reference0 == 0 //Don't touch this line.
 	{
		"\![enter,passivemode]\0\s[0]Hullo,\w2 you!\w8 I'm the Demoman.\w8 What they be callin' ye?\![open,inputbox,OnNameTeach,-1]\e"
		
		//There's a lot going on here, but what you mostly need to remember is to enter Passivemode at the beginning, and make sure not to touch the bottom part that starts with \w5\_q where the options are set up. Do whatever you like with the rest of the dialogue though! Make sure to set up poses for both characters right when you start, otherwise one will be invisible until they speak.
		//Note also the use of the \x and \c tags. Read more about them in the intermediate SakuraScript section of the walkthrough if you're curious.
		
		//*********************Advanced User Info*******************************
		//You can rename the choices at the bottom anything you like. The basic structure of a choice goes like \q[Displayed Name,Linkedfunction]. So for example, \q[Do a Dance,danceitup] would display "Do a Dance" in the balloon and it would link to the function titled "danceitup".
		//Note - Do not include quotation marks in the displayed name, or any other symbols like brackets or dialogue coding like \_a, since that'll break the option in the balloon. If you do this you'll notice pretty quickly. Also option names do not word wrap, so don't make them too long if your balloon is small.
		
		//If you remember my note from above about the difference between On functions, this is one place it comes up. If your linked function in this menu doesn't start with On, like danceitup up there, you'll have to preface it in the following code with Select.danceitup. You can see this at work below here. However, if it does have On, such as OnDanceitup, then you can simply name the function in the code as OnDanceitup. Take a look whenever functions are defined and how they're called in the files,and it should come together for you.
		
		//If you link to a function that doesn't exist, the ghost will do nothing. This can be handy for "Cancel" type functions, just point it at something that doesn't exist if you don't want to have a specific bit of cancel dialogue.
		
		//If you want your ghost to just refer to your user as "they" and want to skip the pronoun business altogether, then you can just delete the choices and end the dialogue with \e. You'll want to go into menu.dic and delete the pronoun choice option from the config menu as well.
		//***********************************************************************
 	}
	else
 	{
		{
 		"\0\s[0]This is the OnFirstBoot dialogue if we've been uninstalled and reinstalled.\e"
		}
 	}
}

//Below are the choices that were defined at the end of the OnFirstBoot dialogue up there. These define the values your ghost will be using for pronouns according to what the user selected. On the whole, you should not need to touch these.

//*********************Advanced User Info*******************************
//Notice that after the values are set, there's a -- and then it loads up the next function in the sequence. You can use this basic method to set many values at once, then go to the same function afterwords.

//To define a value, you use a single = mark. If it's a word, you need to put it in quotation marks, but if it's a number, you do not. See the walkthrough page on coding for details.

//Notice how each choice is formatted as Select.choice. This is what I was talking about above with the difference between OnFunction and Function. These choices do not start with On, so they must begin with Select. instead. If you're setting up some quick choices for a menu you're only going to do once, then don't be afraid to use select. instead of having everything start with On.
//***********************************************************************

//--GetTimeSlot
//This is another unique function to tell what time of day it is. This is used for specialized dialogue related to the day. If you're uninterested, just ignore it. Either way, don't touch it. If you are going to use it though, make a note of the names used for each chunk of time, like earlymorning or lunch. Those are the names you'll be using later.
GetTimeSlot
{
	if hour >= 5 && hour <= 8
	{
		"earlymorning"
	}
	elseif hour >= 9 && hour <= 11
	{
		"morning"
	}
	elseif hour >= 12 && hour <= 14
	{
		"lunch"
	}
	elseif hour >= 15 && hour <= 17
	{
		"afternoon"
	}
	elseif hour >= 18 && hour <= 20
	{
		"evening"
	}
	elseif hour >= 21 && hour <= 24
	{
		"latenight"
	}
	else
	{
		"midnight"
	}
}
//*********************Advanced User Info*******************************
//Do you see how this function is determining what time of day it is? It's using larger than/smaller than operators to isolate a range of time to define. For example, "hour >= 21 && hour <= 24" defines an hour that's greater than/equal to 21 AND less than/equal to 24. You can use this basic method to define other things too, such as the seasons. Keep this in mind! You never know when it might come in handy. I talk about operators more in the coding walkthrough page.
//***********************************************************************


//--GetDaySlot

//Like the above, but to find out what day it is. You can primarily use this for specialized dialogue on certain days, like the user's birthday. Either way, don't touch it.

GetDaySlot
{
	"%(month)month %(day)day"
}


//-----------------------Normal Booting----------------------------

//From this point on, the dialogue will be for any normal boot of your ghost. You can specialize this for certain days or times if you like, or if you're uninterested, leave it very simple.


//--OnBoot

//As you can probably guess, OnBoot runs when you boot your ghost. It will run every time you boot your ghost, as a matter of fact.

//*********************Advanced User Info*******************************
//If you're defining new values that depend on what you were doing with your ghost (like say, if you've hit them, if they're in a certain mode of some kind) and are generally temporary, remember to put them in OnBoot and set them back to zero or off. For example, I have a counter in the Hunter Smoker ghost that keeps track of if you've hit one of them so that when you go into their menus, it will know to give you the option to apologize or not. So I made sure to add a hunterpunchcount = 0 tag at the beginning of OnBoot, that way when you boot them up, they start fresh and don't display the option if you haven't done anything wrong yet. It's unlikely this'll come up very much if you're not interested in expanding your ghost, but I'm making a note of it here anyway for enterprising developers, huge success.
//***********************************************************************

OnBoot //When Demo boots up...
 {
	lastTalk = ""
	passmin = 0
	passsec = 0
 	"\0\s[0]"
	--
	dayslot = GetDaySlot
	timeslot = GetTimeSlot //You should remember these functions from above! They determine the date and time. Basically, it's using the functions GetDaySlot and GetTimeSlot to determine the two values for dayslot/timeslot that it will use in the following if statements. Those who read the coding page of the walkthrough and are interested in using your own functions, pay very close attention to this and study how it works!
	

	
	if dayslot == userbirthday //User's birthday
	{
		"\0\s[5]That time o' year already?\w8 Cheers,\w3 mate!\w6 Happy birthday!\e" 
	}
	elseif dayslot == "1month 1day" //New Years
	{
		"\0\s[5]It must be New Year's Day today \w3'cause me bladder's full,\w4 me head feels like me mates chucked a caber at it,\w4 and I think something small may have died in me mouth.\w8 Hope yer feelin' better than me,\w3 mate!\e"
	}
	elseif dayslot == "1month 17day" //Bootlegger's Day
	{
		"\0\s[5]Oi!\w8 It's National Bootlegger's Day today, so ye best saw off yer leg and replace it with a wooden one to up your max health & gain more turnin' speed!\e"
	}
	elseif dayslot == "1month 25day" //Robbie Burns Day
	{
		"\0\s[5]Get out the haggis & whiskey,\w4 me friend -\w8 it's Robbie Burns Day!\w8 Me great-\w1great-\w1great-\w1great grandpa fought Robbie Burns back in the day.\w8 They say the pen's mightier than the sword,\w5 but it's just a wee thing compared to a bare-chested Ullapoolian wielding two live and very angry sheep!\e" 
	}
	elseif dayslot == "2month 14day" //Valentines Day
	{
		"\0\s[5]Oh,\w3 it's Valentine's Day,\w4 is it?\w7 Best be callin' yer sweetie.\w8 An' if ye hannae sweetie,\w5 have a drink with me instead!\e" 
	}
	elseif dayslot == "2month 28day" //Public Sleeping Day
	{
		"\0\s[5]Oh it's National Public Sleeping Day today,\w2 is it?\w7 This is me specialty.\w8 Any public place is a good sleeping place,\w3 except for the back o' the Cow & Cockle in Ullapool.\w7 They have an \w2'\w2o\w2p\w2e\w2n\w2 a\w1i\w1r\w1'\w1 toilet concept an'\w1.\w1.\w1\.\w1.\w4 ach,\w3 it's nae pretty.\e" 
	}
	elseif dayslot == "6month 8day" //Best Friends Day
	{
		"\0\s[5]Today is National Best Friends day!\w8 Time tae grab yer bestie,\w4 an get in a guid,\w2 solid bar fight with nae but a wet sock full o' pennies to defend the pair or ye!\e" 
	}
	elseif dayslot == "2month 28day" //Public Sleeping Day
	{
		"\0\s[5]Oh it's National Public Sleeping Day today,\w3 is it?\w8 This is me specialty.\w8 Any public place is a good sleeping place,\w4 except for the back o' the Cow & Cockle in Ullapool.\w8 They have an \w1'\w1o\w1p\we\w1n a\w1i\w1r\w1' t\w1o\w1i\w1l\w1e\w1t c\w1o\w1n\w1c\w1e\w1p\w1t\w3 an'\w1.\w1.\w1.\w1.\w6 ach,\w3 it's nae pretty.\e" 
	}
	elseif dayslot == "3month 17day" //St. Patricks Day
	{
		"\0\s[5]Today is the day o' British priests castin' snakes outta Ireland and drinkin' 'til yer oot yer face an' seein' leprechauns.\e" 
	}
	elseif dayslot == "3month 27day" //International Whisky Day
	{
		"\0\s[5]Today is the one o' the best days to be invented\w1.\w1.\w1.\w8 International Whisky Day!\w8 I'm gonna go get arsefaced.\w8 Ye can find me at the bar surrounded by several empty bottles of tipple.\e" 
	}
	elseif dayslot == "4month 7day" //National Beer Day
	{
		"\0\s[5]It's National Beer Day today\w3 and what better way to celebrate than with yer best boyo after a long day blowing stuff up,\w4 ruinin' robots and few dozen bar fights.\w8 Call me,\w4 Soldier!\e" 
	}
	elseif dayslot == "4month 14day" //Look up at the Sky Day
	{
		"\0\s[5]Hey,\w4 it's National Look Up at the Sky Day,\w4 so if ye ever wanted to shake yer fist at some clouds,\w4 gae it a go!\e" 
	}
	elseif dayslot == "5month 1day" //No Pants Day
	{
		"\0\s[5]'Oh it's National No Pants Day,'\w5ye be wonderin' to yerself.\w8 'How do I celebrate?'\w8 One word,\w3 ye wee sassenach:\w8 KILTS.\e" 
	}
	elseif dayslot == "5month 7day" //Homebrew Day
	{
		"\0\s[5]Today is International Homebrew Day\w5 and I plan to celebrate by not rememberin' the time I made me own brew outta potassium chloride,\w4 a fishcake,\w4 and 50 gallons o' fermented cactus juice.\w8 Ach,\w4 good ingredients are hard to come by in the gravel flats o' New Mexico.\e" 
	}
	elseif dayslot == "7month 8day" //Video Games Day
	{
		"\0\s[5]Aye,\w3 tis the day where we celebrate bloodthirsty pixels smashing eachother to teeny weeny pieces on a teeny weeny screen.\w8 I prefer the real action meself.\w8 What's that,\w3 Eyelander?\w6 More heads?\w8 Heh,\w5 screw celebrating\w5 I gotta do some beheading.\e" 
	}
	elseif dayslot == "7month 27day" //International Scotch Day
	{
		"\0\s[5]Aye,\w4 tis the day where I kill me liver.\w8 Wait,\w4 that's every day\w1.\w1.\w1.\w8 anyway,\w4 it's Scotch Day.\w8 Get ye peaty bog material based liquor and disregard the idea of living past 50.\w8 Bye bye,\w1 Mr. Liver!\e" 
	}
	elseif dayslot == "8month 16day" //National Rum Day
	{
		"\0\s[5]I'd be enjoying this National Rum Day if it weren't for the fact that I smashed me last bottle over the head of the BLU Sniper.\e" 
	}
	elseif dayslot == "9month 9day" //Rum Punch Day
	{
		"\0\s[5]It's National Rum Punch Day today!\w8 Now do yer duty by drinkin' a lot of rum and then punchin' a lot of people!\e" 
	}
	elseif dayslot == "9month 19day" //International Talk Like a Pirate Day
	{
		"\0\s[5]Y'arr,\w3 me heartie!\w8 It be International Talk Like A Pirate Day.\w8 Do ye be wantin' to sail the Seven Seas?\w7 Ye bloody landlubbers wouldn't know how tae react if ye saw the dreaded Loch Ness Monster!\e" 
	}
	elseif dayslot == "10month 22day" //Caps Lock Day
	{
		"\0\s[5]\f[height,16]TODAY IS CAPS LOCK DAY, SO CELEBRATE BY YELLING AT EVERY LAD & LASS IN SIGHT!\f[height,default]\e" 
	}
	elseif dayslot == "10month 31day" //Halloween
	{
		"\0\s[5]Oi!\w6 Merasmus!\w6 I know yer there,\w3 ye howlin' numpty!\w8 Lemme stuff some bombs in yer breeks!\e" 
	}
	elseif dayslot == "11month 8day" //National Shot Day
	{
		"\0\s[5]Tequila?\w6 Check.\w8 Sambuca?\w8 Check.\w8 Absinthe?\w6 Check.\w8 Turpentine?\w6 Check.\w8 It's National Shot Day.\w8 Line 'em up,\w3 mate!\e" 
	}
	elseif dayslot == "11month 30day" //St. Andrew's Day
	{
		"\0\s[5]Grab a bowla cullen skink and a bottle o' whisky!\w8 It's St. Andrew's Day today and we're gonna listen to Scotland The Brave until our ears implode,\w5 insult the English until our tongues bleed,\w5 an' drink until our heads are right minced!\e" 
	}
	elseif dayslot == "12month 14day" //Monkey Day (and Poopy Joe Appreciation Day)
	{
		"\0\s[5]'Tis a sad day today.\w7 It's National Monkey Day where we at the base salute Poopy Joe,\w5 God rest his obliterated soul.\w8 I'm pouring one out for ye,\w4 ye absolute Hero.\w8 I hope yer fighting Vladimir Bananas to the death in monkey heaven as we speak.\e" 
	}
	elseif dayslot == "12month 25day" //Smissmas
	{
		"\0\s[5]Happy Smissmas to ye!\w8 May ye bask in the spirit o' Australian Christmas.\w8 An remember: \w6if you see crabbit Ol' Nick,\w6 gae him a ruddy good punch in the teeth before he abducts yer wee bairns and takes them to an offshore island where child labour laws are unscrutinized at best!\e" 
	}
	else
	{
		"%(normalboottalk)" //If none of the days above match the current date, the ghost instead will go down to the next function, normalboottalk.
	}
}

normalboottalk
{
	if weekday == 6 && hour >= 19 //This checks if the weekday equals six, meaning saturday AND (using the && operator) if the hour is past 19. You can change these numbers or values to anything you like! As such you can check any combination of date and day and time for potential boot dialogue. You can also add more elseif checks for other days if you want.
		{
		"\0\s[0]It's Saturday night.\e"
		}
	elseif RAND(100) < 40 //What this does is choose a random number from 1-100, and then checks if that number is less than 40. If it's less than forty, then these dialogue pieces will occur. Remember, you can have multiple lines of dialogue within one set of brackets like this! You just need to make sure they're all enclosed in their own set of quotation marks.
		{
		"\0\s[0]This is one of the random boot conversations.\w8\e"
	
		"\0\s[0]This is another one of the random boot conversations.\e"
	
		"\0\s[0]This is the third random boot conversation.\w8\e"
		}
 	else
 	{
		if timeslot == "morning" || timeslot == "earlymorning"
		{
		"\0\s[6]Good mornin'!\e"
		}
		elseif timeslot == "lunch" || timeslot == "afternoon"
		{
		"\0\s[6]Good afternoon!\e"
		}
		elseif timeslot == "evening" || timeslot == "latenight"
		{
 		"\0\s[6]Good e'enin!\e"
		}
		else
		{
		"\0\s[6]Burnin' the midnight oil,\w5 are ye?\e"
		}
	}
}


//--OnClose

//OnClose runs when you close your ghost. Like OnBoot, this can be customized for times and days if you like, as you saw above. It can also be easily simplified down to
//OnClose
//{
//[insert your dialogue here]
//}
//if you don't want to deal with the time slots. Although do note, close dialogue must end with a \- instead of \e. \- will close the program.
//Like above with OnBoot, just replace all the following pieces of dialogue with your own. It feels a bit redundant for me to point out every single piece and say "replace this", you know? If you've read the SakuraScript walkthrough page, you should know what a piece of dialogue looks like by now within code. Just go through OnClose and replace each bit with dialogue more suited for your ghost.
//Note though that each bit here ends with \w8 instead of \e. That's because the actual end statement to close the ghost is at the very end, one of the very very rare times you won't have to end a line with \e. Instead, end it with \w8 so there's a little bit of a pause for the user before your ghost closes so they can read the last message.

OnClose
 {
 timeslot = GetTimeSlot //as you saw above, it's checking the time.
 --
	if passmin >= 5	//This checks to see if you've had them open for at least five minutes.
		{
			if RAND(100) < 40 //see above about the random number generator
			{
				"\0\s[0]This is a random close dialogue.\w8\w8\w8"
			}
			else
			{
			if timeslot == "earlymorning"
				{
					"\0\s[0]This is an early morning close dialogue.\w8\0\s[0]From 5 to 8.\w8"
					
					"\0\s[0]This is another early morning close dialogue.\w8\w8"
				}
			elseif timeslot == "morning"
 				{
 					"\0\s[0]This is a morning close dialogue.\w8\w8"
 				}
 			elseif timeslot == "lunch"
 				{
 					"\0\s[0]This is a lunch close dialogue.\w8"
					
 					"\0\s[0]This is another lunch close dialogue.\w8\0\s[0]In the middle of the day.\w8"
 				}
 			elseif timeslot == "afternoon"
 				{
 					"\0\s[0]This is an afternoon close dialogue.\w8\0\s[0]Done.\w8"
					
 					"\0\s[0]This is another afternoon close dialogue.\w8\0\s[0]Yup.\w8"
 				}
  			elseif timeslot == "evening"
 				{
 						if weekday == 6 //here, a nested if statement is checking that if it's evening, is it also saturday? You can do this to check more specific times on other days as well. You can change this to some other day if you want, or just delete this little if/else section entirely and write your own evening related close dialogue.
 						{
 							"\0\s[0]This is a Saturday evening close dialogue.\w8\0\s[0]Somewhat specific.\w8"
 						}
 						else //if it's not saturday, then it'll do this dialogue instead.
 						{
 							"\0\s[0]This is an evening close dialogue.\w8\0\s[0]Bye.\w8"
							
 							"\0\s[0]This is another evening close dialogue.\w8\0\s[0]Yup.\w8"
 						}
 				}
			elseif timeslot == "latenight"
			 	{
 						if weekday == 6 //This is the same check as above to see if it's Saturday. Note that this doesn't have an else statement! Sometimes you can get away with that, but make sure you test thoroughly.
						//Of course, you can also cut this check entirely if you want.
 						{
 							"\0\s[0]This is a late Saturday night close dialogue.\w8"
							
 							"\0\s[0]This is another late Saturday night close dialogue.\w8\0\s[0]Yup.\w8"
 						}
						
 						"\0\s[0]This is a late night close dialogue.\w8\0\s[0]That it is.\w8"
						
						"\0\s[0]This is another late night close dialogue.\w8\0\s[0]Done.\w8"
 				}
			else //like above, this is the midnight time slot since it's the last one left.
 				{
 						if weekday == 0 //checking if it's the middle of the night on Sunday
 						{
 							"\0\s[0]This is a middle of the night Sunday close dialogue.\w8\0\s[0]From midnight to five AM on Sunday.\w8"
 						}
						"\0\s[0]This is a middle of the night close dialogue.\w8\0\s[0]Very late at night.\w8"
						
						"\0\s[0]This is another middle of the night close dialogue.\w8"
						
						"\0\s[0]This is the third middle of the night close dialogue.\w8\0\s[0]So it is.\w8"
				}
			}
				
 		}
 		
 		
 	else //This dialogue is for if they haven't been open for at least five minutes.
 	{
 		"\0\s[0]This dialogue is for closing us before five minutes have passed.\w8\w8"
		
 		"\0\s[0]This is another bit of dialogue for closing us before five minutes have passed.\w8\0\s[0]Quickly done.\w8\w8"
 	}
 	--
	"\-\e" //this bit of code actually closes and ends the ghost. Because \e is here, you don't have to end each line above with it. Again, this will come up very rarely, so OnClose is an unusual case.
 }


 //-------------------------State Changing--------------------
 //From here on, most of the dialogue will have to do with changing shells, ghosts, or states in some way.
 

//--OnWindowStateRestore

//This will run when you minimize them and then bring them back up. Replace with what you like.

OnWindowStateRestore
 {
	"\0\s[0]This dialogue means we were minimized.\e"
}


//--OnGhostChanging

//This runs whenever you change or reload the ghost. You can change ghosts by going into the right click menu and going to Change Ghost, but this dialogue will also be called if you reload them using Utilities->Reload Ghost. Protip: If you are going to make a ghost, you will be reloading it A LOT.
//Note: If you reload your ghost using the developer console instead of Utilities->Reload Ghost, it won't do this dialogue, so don't freak out if it doesn't show up.
 
OnGhostChanging
 {
	if reference0 == "Demoman" //Replace this with the name of your Sakura character as you put in install.txt or descript.txt. I set this up to use the full ghost's name with Hunter and Smoker but I forget exactly how I did it and I'm having trouble getting it to work again. I think I just didn't define the Sakura or Kero names in either descript.txt or install.txt. You can experiment with it yourself. Otherwise, leave it as your Sakura character's name.
	{
		"\0\s[0]This dialogue is for us reloading ourselves.\w8\w8\e"
		//Replace this dialogue with whatever you like.
	}
 	else //If you're switching to another Ghost.
	{
		"\0\s[0]This dialogue means we are switching to %(reference0).\e"
		
		//Replace this dialogue with whatever you like. Notice the use of the %(reference0) envelope here? In OnGhostChanging, %(reference0) stores the name of the ghost being swapped to, so if you want to display what you're switching to, you can use %(reference0) as in this example. You don't have to use %(reference0) if you don't want to though.
	}
}


//--OnGhostChanged

//A sister to the above, this runs after the ghost has either reloaded itself, or when you switch from another ghost to this ghost.

OnGhostChanged
{
	"\0\s[0]" //this sets up their default poses
	--
	if reference0 == "Demoman" //As above, this should be the name of your ghost as in install.txt or descript.txt.
	{
		"\0\s[0]We have reloaded ourselves.\e"
	}
	else //If you're switching to them from another ghost...
	{
		"\w8\0\s[0]Someone switched from you to us.\e"

		//Again, %(reference0) in this function is the name of the ghost in question. As above, replace these two lines of dialogue what what'd be appropriate for your ghost.
	}
}


//--OnShellChanging

//This will run when you change your ghost's shell. If you don't have any other shells for your ghost, you can safely ignore this but don't delete it, you might as well keep it just in case. I probably won't add a different shell to this template because shells are a lot of work ugh, but for the sake of argument, let's pretend I did.

OnShellChanging
 {
	if reference0 == "Hypothetical Shell that doesn't actually exist" //reference0 in OnShellChanging is the name of the shell you're swapping to. It should be defined in the descript.txt file in your shell folder. If you do have alternate shells, put in the right name here.
	{
	"\0\s[0]This dialogue is specifically for changing to this particular shell.\w8\0\w8\s[0]It totally exists.\w8\e"
	//Then rewrite this line as appropriate.
	}
	else //if you don't have any specific dialogue for a specific shell
	{
	"\0\s[0]This dialogue is for changing shells.\w8\0\s[0]Sure is.\w8\e"
	
	"This is another bit of dialogue for changing shells.\w8\0\s[0]I wonder how many people will actually have multiple shells?\e"
	
	//Rewrite these two lines as you need.
	}
 }
 
 
 //--OnShellChanged
 
 //The sister to the above, this is the dialogue after you've changed the shell.
 
OnShellChanged
 {
 	if reference0 == "GT Default Shell" //Again, this is the name of your shell as you put in the descript.txt file for that shell.
 	{
 		nowshell = "master" //This is the folder name for your shell. Not the same as the above! 
		
 		"\0\s[0]This dialogue is for switching to our default shell.\w8\0\s[0]No really, will anyone actually put in the work to use these functions?\e"
		//Replace dialogue as required.
 	}
 	elseif reference0 == "Hypothetical Shell that doesn't actually exist" //You can use as many elseifs for as many shells as you've got.
 	{
 		nowshell = "totallyrealshell"
		
 		"\0\s[0]This dialogue is for switching to that hypothetical shell.\e"
		
 		"\0\s[0]This is another bit of dialogue for switching to this hypothetical shell.\e"
		//Replace these bits with whatever you have in mind.
 	}
 	elseif reference0 == "Another totally real shell wow"
 	{
 		nowshell = "thiswouldbesomuchwork"
		
 		"\0\s[0]This dialogue is after we've switched to another totally real shell.\e"
		//Replace this as well.
 	}
 	else //For any shell without a specific name, or if you don't want to bother with individual responses to a shell.
 	{
	"\0\s[0]This dialogue is after we've changed our shell to %(reference[0]).\e"
	
	//Note the %(reference[0]) here! This time that should store the name of whatever shell you're switching to. To be honest, I have not experimented with this too much because making shells is a pain in the tuckus, but I'm going to take cindysuke's coding on faith and assume reference[0] is correct instead of reference0. Replace this bit of dialogue as you need.
	}
 }


 //--OnDressupChanged
 
 //This runs whenever you fiddle with their clothing via the dress-up option, if you've set any for your ghost. Honestly setting up clothing is a nightmare and I hate doing it, and if your ghost is going to be moving around substantially or at all, clothing won't stay in the right place anyway. So unless you're like a real expert on surfaces.txt coding and rigging up clothing for different poses or you're intense or dedicated enough to set up clothing in the right place for every pose you do, I would not bother with clothing for your ghost.
 //HOWEVER I can't begrudge people who actually would put in that effort! And in that case, this function is for you. For now, I'll fill this in with some hypothetical items. Replace the dialogue below with whatever you need.

OnDressupChanged
{
if reference0 == 0 //in OnDressupChanged, reference0 refers to the character, therefore this is evaluating which character in question is getting dressed up. 0 is the main character, as you know from the walkthrough by now.
	{
	if reference1 == "Clothing for Girl" //This is the name of the clothing item in the descript.txt file, I'm pretty sure.
		{
			if reference2 == 1 //This checks if you're putting it on.
			{
			"\0\s[0]You put my clothing item on me.\e"
			}
			else // This checks if you're taking it off.
			{
			"\0\s[0]You took the clothing item off.\e"
			}
		}		
	}
else //if reference0 isn't the main character, then it has to be the side character.
	{
	if reference1 == "some kind of clothing for triangle??" //The name of the item of clothing in the descript.txt file in your shell folder.
		{
			if reference2 == 1 //If you put it on
			{
			"\0\s[0]I'm wearing some kind of clothing.\w8\0\s[0]Maybe a hat?\e"
			}
			else //When you take it off.
			{
			"\0\s[0]You took off some kind of clothing.\e"
			}
		}
	elseif reference1 == "i'm gonna say a propeller beanie" //As you've seen above, you can use elseifs to expand the list if you have more than one item.
		{
			if reference2 == 1 //if you're putting it on
			{
			"\0\s[0]You put a hat on me.\e"
			}
			else //when you take it off
			{
			"\0\s[0]You took off the hat.\e"
			}
		}
	}
}